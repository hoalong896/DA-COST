import { NextResponse } from "next/server";

// Danh s√°ch c√¢u h·ªèi & tr·∫£ l·ªùi v·ªÅ mua b√°n ƒë·ªì c≈©
const faq = [
  { id: 1, question: "Xin ch√†o", answer: "Xin ch√†o üëã! T√¥i l√† tr·ª£ l√Ω b√°n h√†ng ƒë·ªì c≈©, b·∫°n c·∫ßn h·ªó tr·ª£ g√¨?" },
  { id: 2, question: "Mua ƒë·ªì c≈©", answer: "B·∫°n mu·ªën mua lo·∫°i ƒë·ªì c≈© g√¨? V√≠ d·ª•: ƒëi·ªán tho·∫°i, s√°ch, qu·∫ßn √°o..." },
  { id: 3, question: "B√°n ƒë·ªì c≈©", answer: "B·∫°n c√≥ th·ªÉ ƒëƒÉng b√°n tr·ª±c ti·∫øp tr√™n trang web, nh·∫≠p th√¥ng tin s·∫£n ph·∫©m v√† h√¨nh ·∫£nh." },
  { id: 4, question: "Gi√° c·∫£", answer: "Gi√° c·∫£ t√πy thu·ªôc v√†o lo·∫°i v√† t√¨nh tr·∫°ng s·∫£n ph·∫©m. B·∫°n c√≥ th·ªÉ so s√°nh v·ªõi c√°c s·∫£n ph·∫©m t∆∞∆°ng t·ª±." },
  { id: 5, question: "Ship h√†ng", answer: "Ch√∫ng t√¥i h·ªó tr·ª£ giao h√†ng to√†n qu·ªëc, ph√≠ ship t√≠nh theo kho·∫£ng c√°ch." },
  { id: 6, question: "Thanh to√°n", answer: "B·∫°n c√≥ th·ªÉ thanh to√°n b·∫±ng chuy·ªÉn kho·∫£n, v√≠ ƒëi·ªán t·ª≠ ho·∫∑c khi nh·∫≠n h√†ng." },
  { id: 7, question: "Khuy·∫øn m√£i", answer: "Hi·ªán c√≥ gi·∫£m gi√° 10% cho c√°c s·∫£n ph·∫©m ƒëƒÉng b√°n ƒë·∫ßu ti√™n tr√™n trang." },
  { id: 8, question: "ƒê·ªïi tr·∫£", answer: "Ch√∫ng t√¥i cho ph√©p ƒë·ªïi tr·∫£ trong 7 ng√†y n·∫øu s·∫£n ph·∫©m kh√¥ng ƒë√∫ng m√¥ t·∫£." },
  { id: 9, question: "T√¨nh tr·∫°ng s·∫£n ph·∫©m", answer: "C√°c s·∫£n ph·∫©m ƒë·ªÅu c√≥ m√¥ t·∫£ chi ti·∫øt v·ªÅ t√¨nh tr·∫°ng, h√¨nh ·∫£nh minh h·ªça k√®m theo." },
  { id: 10, question: "Li√™n h·ªá h·ªó tr·ª£", answer: "B·∫°n c√≥ th·ªÉ chat tr·ª±c ti·∫øp v·ªõi ch√∫ng t√¥i qua bot ho·∫∑c g·ªçi hotline 0123-456-789." },
];

export async function POST(req) {
  try {
    const { questionId } = await req.json();

    const found = faq.find(q => q.id === questionId);
    if (!found) {
      return NextResponse.json({ reply: "C√¢u h·ªèi kh√¥ng h·ª£p l·ªá." }, { status: 400 });
    }

    return NextResponse.json({ reply: found.answer });
  } catch (err) {
    console.error("Server error:", err);
    return NextResponse.json({ reply: "L·ªói m√°y ch·ªß ‚ùå" }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json(faq);
}
